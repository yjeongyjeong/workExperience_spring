/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.78
 * Generated at: 2024-03-12 08:26:31 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class boardJoin_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(7);
    _jspx_dependants.put("jar:file:/C:/Users/82104/Desktop/coding/workExperience/spring/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/springBoard/WEB-INF/lib/jstl-1.2.jar!/META-INF/fn.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1709601169261L));
    _jspx_dependants.put("/WEB-INF/lib/spring-webmvc-3.1.1.RELEASE.jar", Long.valueOf(1709601169466L));
    _jspx_dependants.put("jar:file:/C:/Users/82104/Desktop/coding/workExperience/spring/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/springBoard/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("jar:file:/C:/Users/82104/Desktop/coding/workExperience/spring/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/springBoard/WEB-INF/lib/spring-webmvc-3.1.1.RELEASE.jar!/META-INF/spring.tld", Long.valueOf(1329370132000L));
    _jspx_dependants.put("jar:file:/C:/Users/82104/Desktop/coding/workExperience/spring/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/springBoard/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/views/common/common.jsp", Long.valueOf(1710216022508L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("  \r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title></title>\r\n");
      out.write("</head>\r\n");
      out.write("<script src=\"/resources/js/jquery-1.10.2.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("	var $j = jQuery.noConflict();\r\n");
      out.write("</script>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("    \r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>boardView</title>\r\n");
      out.write("\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("	.userPwd_ok {\r\n");
      out.write("		font-size: small;\r\n");
      out.write("		color: #008000;\r\n");
      out.write("		display: none;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.userPwd_already {\r\n");
      out.write("		font-size: small;\r\n");
      out.write("		color: rgb(201, 0, 0);\r\n");
      out.write("		display: none;\r\n");
      out.write("	}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("		var checkIdResult = false;\r\n");
      out.write("		var checkPwResult = false;\r\n");
      out.write("\r\n");
      out.write("	function idChk(){\r\n");
      out.write("		var userId = $j('#userId').val();\r\n");
      out.write("		console.log(userId);\r\n");
      out.write("		\r\n");
      out.write("		const userVo = { // BoardVo 객체 생성\r\n");
      out.write("				\"userId\": userId\r\n");
      out.write("	        };\r\n");
      out.write("		\r\n");
      out.write("			$j.ajax({\r\n");
      out.write("			    url : \"/board/boardUserIdCheckAction.do\",\r\n");
      out.write("			    dataType: \"json\",\r\n");
      out.write("			    type: \"POST\",\r\n");
      out.write("			    contentType: \"application/json; charset=utf-8\",\r\n");
      out.write("			    data : JSON.stringify(userVo),\r\n");
      out.write("			    success: function(userIdCnt)\r\n");
      out.write("			    {\r\n");
      out.write("			    	console.log(userIdCnt);\r\n");
      out.write("			    	//alert(userIdCnt);\r\n");
      out.write("			    	\r\n");
      out.write("			    	if(userIdCnt == 0){ //0이면 사용가능 1이면 중복\r\n");
      out.write("						alert(\"사용할 수 있는 아이디입니다.\");\r\n");
      out.write("						checkIdResult = true;\r\n");
      out.write("			    	} else{ //0이 아닌경우(중복일 때)\r\n");
      out.write("				    	alert(\"중복된 아이디입니다.\");\r\n");
      out.write("				    	checkIdResult = false;\r\n");
      out.write("			    	}\r\n");
      out.write("					\r\n");
      out.write("			    },\r\n");
      out.write("			    error: function (jqXHR, textStatus, errorThrown)\r\n");
      out.write("			    {\r\n");
      out.write("			    	alert(\"fail\");\r\n");
      out.write("			    }\r\n");
      out.write("			});\r\n");
      out.write("			//ajax end\r\n");
      out.write("			\r\n");
      out.write("			return checkIdResult; //true 인지 false인지 반환 => 추후 if문에서 확인\r\n");
      out.write("		};\r\n");
      out.write("		\r\n");
      out.write("		function onkeyupCheckIdResult(){\r\n");
      out.write("			checkIdResult = false;\r\n");
      out.write("			};\r\n");
      out.write("\r\n");
      out.write("	function pwChk(){\r\n");
      out.write("		var userPw = $j('#userPw').val();\r\n");
      out.write("		var userPwChk = $j('#userPwChk').val();\r\n");
      out.write("		\r\n");
      out.write("		var pwList=[];\r\n");
      out.write("		\r\n");
      out.write("		console.log(userPw);\r\n");
      out.write("		console.log(userPwChk);\r\n");
      out.write("		\r\n");
      out.write("		pwList.push(userPw);\r\n");
      out.write("		pwList.push(userPwChk);\r\n");
      out.write("		\r\n");
      out.write("			$j.ajax({\r\n");
      out.write("			    url : \"/board/boardUserPwCheckAction.do\",\r\n");
      out.write("			    dataType: \"json\",\r\n");
      out.write("			    type: \"POST\",\r\n");
      out.write("			    contentType: \"application/json; charset=utf-8\",\r\n");
      out.write("			    data : JSON.stringify(pwList),\r\n");
      out.write("			    success: function(userPwCnt)\r\n");
      out.write("			    {\r\n");
      out.write("			    	console.log(userPwCnt);\r\n");
      out.write("			    	//alert(userPwCnt);\r\n");
      out.write("			    	\r\n");
      out.write("			    	if (userPwCnt == 1) { //1이면 일치(확인됨)\r\n");
      out.write("						$j('.userPwd_ok').css(\"display\", \"inline-block\");\r\n");
      out.write("						$j('.userPwd_already').css(\"display\", \"none\");\r\n");
      out.write("						checkPwResult = true;\r\n");
      out.write("					} else if (userPwCnt == 0) { // 0 불일치\r\n");
      out.write("						$j('.userPwd_ok').css(\"display\", \"none\");\r\n");
      out.write("						$j('.userPwd_already').css(\"display\", \"inline-block\");\r\n");
      out.write("						//값을 지우면 확인못할것같아서 주석처리함\r\n");
      out.write("						checkPwResult = false;\r\n");
      out.write("					} else { //-1 : controller에서 문제가 발생\r\n");
      out.write("						alert(\"오류가 발생하였습니다.\");\r\n");
      out.write("					}\r\n");
      out.write("					\r\n");
      out.write("			    },\r\n");
      out.write("			    error: function (jqXHR, textStatus, errorThrown)\r\n");
      out.write("			    {\r\n");
      out.write("			    	console.log(\"fail\");\r\n");
      out.write("			    }\r\n");
      out.write("			});\r\n");
      out.write("			//ajax end\r\n");
      out.write("			\r\n");
      out.write("			return checkPwResult; //true 인지 false인지 반환 => 추후 if문에서 확인\r\n");
      out.write("		};\r\n");
      out.write("\r\n");
      out.write("/* 		function handleOnInput(el, maxlength) {\r\n");
      out.write("			if (el.value.length > maxlength) {\r\n");
      out.write("				el.value = el.value.substr(0, maxlength);\r\n");
      out.write("			};\r\n");
      out.write("		}; */\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		$j(document).ready(function(){\r\n");
      out.write("		    $j(\"#formSubmit\").on(\"click\",function(){\r\n");
      out.write("		        var regId = /^[a-zA-Z0-9]{6,10}$/;\r\n");
      out.write("		        var regIdPw = /^(?=.*[a-zA-Z])(?=.*[!@#$%^*+=-])(?=.*[0-9]).{6,12}$/;\r\n");
      out.write("		        var frm = $j('#boardTable');  // jQuery로 선택된 문서 객체로 변경\r\n");
      out.write("\r\n");
      out.write("		        //아이디 확인\r\n");
      out.write("				if ($j('#userId').val().length == 0) {\r\n");
      out.write("					alert(\"아이디를 입력해주세요.\");\r\n");
      out.write("					console.log(1);\r\n");
      out.write("					$j('#userId').focus;\r\n");
      out.write("					return false;\r\n");
      out.write("				} else if (!regId.test($j('#userId').val())) { //아이디 영어 대소문자 확인\r\n");
      out.write("					alert(\"6~10자 영문 대소문자, 숫자만 입력해주세요.\")\r\n");
      out.write("					console.log(2);\r\n");
      out.write("					$j('#userId').focus();\r\n");
      out.write("					return false;\r\n");
      out.write("				} else if (!checkIdResult) {\r\n");
      out.write("					console.log(3);\r\n");
      out.write("					alert(\"아이디 중복확인이 되지않았습니다.\");\r\n");
      out.write("					return false;\r\n");
      out.write("				}\r\n");
      out.write("				\r\n");
      out.write("				//비밀번호 확인\r\n");
      out.write("				else if ($j('#userPw').val().length == 0) {\r\n");
      out.write("					alert(\"비밀번호를 입력하세요.\")\r\n");
      out.write("					$j('#userPw').focus();\r\n");
      out.write("					return false;\r\n");
      out.write("				} else if (!regIdPw.test($j('#userPw').val())) {\r\n");
      out.write("					alert(\"6~10자 영문 대소문자, 숫자, 특수문자를 입력해주세요.\")\r\n");
      out.write("					$j('#userPw').focus();\r\n");
      out.write("					return false;\r\n");
      out.write("				} else if ($j('#userPw').val() == $j('#userId').val()) {\r\n");
      out.write("					alert(\"아이디와 동일한 비밀번호를 사용할 수 없습니다.\")\r\n");
      out.write("					$j('#userPw').focus();\r\n");
      out.write("					return false;\r\n");
      out.write("				} else if (!checkPwResult) {\r\n");
      out.write("					alert(\"비밀번호를 다시 확인해주세요.\");\r\n");
      out.write("					return false;\r\n");
      out.write("				\r\n");
      out.write("				// 이름 확인\r\n");
      out.write("				}else if ($j('#userName').val().length == 0) {\r\n");
      out.write("						alert(\"이름을 입력하세요.\")\r\n");
      out.write("						$j('#userName').focus();\r\n");
      out.write("						return false;\r\n");
      out.write("					\r\n");
      out.write("				//휴대전화번호 확인\r\n");
      out.write("				} else if ( ($j('#userPhone2').val().length == 0)\r\n");
      out.write("						|| ($j('#userPhone2').val().length < 4) ) {\r\n");
      out.write("					alert(\"휴대전화번호 가운데 자리를 다시 확인해주세요(4글자).\")\r\n");
      out.write("					$j('#userPhone2').focus();\r\n");
      out.write("					return false;\r\n");
      out.write("				} else if ($j('#userPhone3').val().length == 0\r\n");
      out.write("						|| $j('#userPhone3').val().length < 4) {\r\n");
      out.write("					alert(\"휴대전화번호 마지막 자리를 다시 확인해주세요(4글자).\")\r\n");
      out.write("					 $j('#userPhone3').focus();\r\n");
      out.write("					return false;\r\n");
      out.write("					\r\n");
      out.write("				//우편번호 확인 postNo\r\n");
      out.write("				} else if ( ($j('#userAddr1').val().length != 0 )\r\n");
      out.write("						&& ($j('#userAddr1').val().length < 7 ) ) {\r\n");
      out.write("					alert(\"우편번호를 다시 확인해주세요.\")\r\n");
      out.write("					$j('#userAddr1').focus();\r\n");
      out.write("					return false;\r\n");
      out.write("				}\r\n");
      out.write("		        \r\n");
      out.write("		        \r\n");
      out.write("		        //\r\n");
      out.write("				 else if ( $j('#userAddr2').val().length == 0 ) {\r\n");
      out.write("					$j('#userAddr2').val() = \"none\";\r\n");
      out.write("				}\r\n");
      out.write("				\r\n");
      out.write("				 else if ( $j('#userCompany').val().length != 0 ) {\r\n");
      out.write("					$j('#userAddr2').val() = \"none\";\r\n");
      out.write("				}\r\n");
      out.write("	\r\n");
      out.write("				var frm = $j('.boardTable :input');\r\n");
      out.write("				var param = frm.serialize(); \r\n");
      out.write("\r\n");
      out.write("				console.log(\"*************************\");\r\n");
      out.write("				console.log(frm);\r\n");
      out.write("				console.log(param);\r\n");
      out.write("				\r\n");
      out.write("				var userData = [];\r\n");
      out.write("				\r\n");
      out.write("				var userId = $j('#userId').val();\r\n");
      out.write("				var userPw = $j('#userPw').val();\r\n");
      out.write("				var userName = $j('#userName').val();\r\n");
      out.write("				var userPhone1 = $j('#userPhone1').val();\r\n");
      out.write("				var userPhone2 = $j('#userPhone2').val();\r\n");
      out.write("				var userPhone3 = $j('#userPhone3').val();\r\n");
      out.write("				var userAddr1 = $j('#userAddr1').val();\r\n");
      out.write("				var userAddr2 = $j('#userAddr2').val();\r\n");
      out.write("				var userCompany = $j('#userCompany').val();\r\n");
      out.write("				\r\n");
      out.write("				const userVo = {\r\n");
      out.write("						\"userId\": userId\r\n");
      out.write("						,\"userPw\": userPw\r\n");
      out.write("						,\"userName\": userName\r\n");
      out.write("						,\"userPhone1\": userPhone1\r\n");
      out.write("						,\"userPhone2\": userPhone2\r\n");
      out.write("						,\"userPhone3\": userPhone3\r\n");
      out.write("						,\"userAddr1\": userAddr1\r\n");
      out.write("						,\"userAddr2\": userAddr2\r\n");
      out.write("						,\"userCompany\": userCompany\r\n");
      out.write("				};\r\n");
      out.write("				\r\n");
      out.write("				userData.push(userVo);\r\n");
      out.write("				\r\n");
      out.write("				$j.ajax({\r\n");
      out.write("				    url : \"/board/boardUserjoinAction.do\",\r\n");
      out.write("				    dataType: \"json\",\r\n");
      out.write("				    type: \"POST\",\r\n");
      out.write("				    contentType: \"application/json; charset=utf-8\",\r\n");
      out.write("				    data : JSON.stringify(userData),\r\n");
      out.write("				    success: function(data, textStatus, jqXHR)\r\n");
      out.write("				    {\r\n");
      out.write("				    	console.log(data);\r\n");
      out.write("				    },\r\n");
      out.write("				    error: function (jqXHR, textStatus, errorThrown)\r\n");
      out.write("				    {\r\n");
      out.write("				    	console.log(\"실패~~~ㅜㅜ\");\r\n");
      out.write("				    }\r\n");
      out.write("				});\r\n");
      out.write("				//ajax end\r\n");
      out.write("		        \r\n");
      out.write("			});\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("<table  align=\"center\" id=\"wrapTable\">\r\n");
      out.write("	<tr id=\"inform\">\r\n");
      out.write("		<td align=\"left\">\r\n");
      out.write("			<a href=\"/board/boardList.do\">List</a> \r\n");
      out.write("		</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td>\r\n");
      out.write("			<table id=\"boardTable\" class=\"boardTable\" border = \"1\">\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td width=\"120\" align=\"center\">\r\n");
      out.write("						id\r\n");
      out.write("					</td>\r\n");
      out.write("					<td width=\"300\">\r\n");
      out.write("					<input type=\"text\" id=\"userId\" name=\"userId\" maxlength=\"15\"\r\n");
      out.write("					oninput=\"this.value = this.value.replace(/[^a-z0-9]/g, '')\" onkeyup=\"return onkeyupCheckIdResult()\">\r\n");
      out.write("					<button id=\"idChk\" onclick=\"return idChk()\">중복확인</button>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td align=\"center\">\r\n");
      out.write("						pw\r\n");
      out.write("					</td>\r\n");
      out.write("					<td>\r\n");
      out.write("					<input type=\"password\" name=\"userPw\" id=\"userPw\" maxlength=\"16\" onkeyup=\"return pwChk()\">\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td align=\"center\">\r\n");
      out.write("						pw check\r\n");
      out.write("					</td>\r\n");
      out.write("					<td>\r\n");
      out.write("					<input type=\"password\" name=\"userPwChk\" id=\"userPwChk\" maxlength=\"16\" oninput=\"return pwChk()\" >\r\n");
      out.write("					<span\r\n");
      out.write("								class=\"userPwd_ok\">&nbsp;&nbsp;success</span> <span\r\n");
      out.write("								class=\"userPwd_already\">&nbsp;&nbsp;fail</span>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td align=\"center\">\r\n");
      out.write("						name\r\n");
      out.write("					</td>\r\n");
      out.write("					<td>\r\n");
      out.write("					<input type=\"text\" name=\"userName\" id=\"userName\" maxlength=\"5\"\r\n");
      out.write(" 					oninput=\"this.value = this.value.replace(/[^가-힣]/ig, '')\">\r\n");
      out.write("					<!-- oninput=\"handleOnInputKor(this)\"> -->\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td align=\"center\">\r\n");
      out.write("						phone\r\n");
      out.write("					</td>\r\n");
      out.write("					<td >\r\n");
      out.write("					<select name=\"userPhone1\" id=\"userPhone1\">\r\n");
      out.write("						");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("					</select>\r\n");
      out.write("					-\r\n");
      out.write("					<input type=\"text\" name=\"userPhone2\" id=\"userPhone2\" style=\"width: 40px\" maxlength=\"4\"\r\n");
      out.write("					oninput=\"this.value = this.value.replace(/[^0-9]/g, '')\">\r\n");
      out.write("					-\r\n");
      out.write("					<input type=\"text\" name=\"userPhone3\" id=\"userPhone3\" style=\"width: 40px\" maxlength=\"4\"\r\n");
      out.write("					oninput=\"this.value = this.value.replace(/[^0-9]/g, '')\">\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td align=\"center\">\r\n");
      out.write("						postNo\r\n");
      out.write("					</td>\r\n");
      out.write("					<td >\r\n");
      out.write("					<input type=\"text\" name=\"userAddr1\" id=\"userAddr1\" placeholder=\"xxx-xxx\" maxlength=\"7\"\r\n");
      out.write("					oninput=\"this.value = this.value.replace(/[^0-9]/g, '').replace(/^(\\d{3})(\\d{3})$/, '$1-$2');\">\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("\r\n");
      out.write("				<tr >\r\n");
      out.write("					<td align=\"center\" align=\"center\">\r\n");
      out.write("						address\r\n");
      out.write("					</td>\r\n");
      out.write("					<td>\r\n");
      out.write("					<input type=\"text\" name=\"userAddr2\" id=\"userAddr2\" maxlength=\"50\">\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("\r\n");
      out.write("				<tr >\r\n");
      out.write("					<td align=\"center\">\r\n");
      out.write("						company\r\n");
      out.write("					</td>\r\n");
      out.write("					<td>\r\n");
      out.write("					<input type=\"text\" name=\"userCompany\" id=\"userCompany\" maxlength=\"20\">\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("\r\n");
      out.write("			</table>\r\n");
      out.write("		</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	\r\n");
      out.write("	<tr>\r\n");
      out.write("		<td align=\"right\">\r\n");
      out.write("			<a id=\"formSubmit\" name=\"formSubmit\">join</a>\r\n");
      out.write("		</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("</table>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /WEB-INF/views/board/boardJoin.jsp(316,6) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/board/boardJoin.jsp(316,6) '${codeList}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${codeList}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /WEB-INF/views/board/boardJoin.jsp(316,6) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("codeList");
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("							<option value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${codeList.codeId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write('"');
            out.write('>');
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${codeList.codeName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</option>						\r\n");
            out.write("						");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }
}
